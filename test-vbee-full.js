const axios = require('axios');

async function testVbeeFull() {
    console.log('üß™ B·∫Øt ƒë·∫ßu test ƒë·∫ßy ƒë·ªß ch·ª©c nƒÉng Vbee TTS...\n');
    
    try {
        // 1. T·∫°o job TTS
        console.log('1Ô∏è‚É£ T·∫°o job TTS...');
        const createPayload = {
            input_text: 'Xin ch√†o! ƒê√¢y l√† b·∫£n test ƒë·∫ßy ƒë·ªß ch·ª©c nƒÉng chuy·ªÉn vƒÉn b·∫£n th√†nh gi·ªçng n√≥i. H·ªá th·ªëng ƒëang ho·∫°t ƒë·ªông t·ªët.',
            voice_code: 'hn_female_ngochuyen_full_48k-fhg',
            audio_type: 'mp3',
            bitrate: 128,
            speed_rate: '1.0'
        };

        const createRes = await axios.post('http://localhost:8888/api/vbee-tts', createPayload, {
            headers: { 'Content-Type': 'application/json' }
        });

        console.log('‚úÖ T·∫°o job th√†nh c√¥ng:');
        console.log(JSON.stringify(createRes.data, null, 2));
        
        const requestId = createRes.data.data.result.request_id;
        console.log(`üìã Request ID: ${requestId}\n`);

        // 2. Ki·ªÉm tra tr·∫°ng th√°i job
        console.log('2Ô∏è‚É£ Ki·ªÉm tra tr·∫°ng th√°i job...');
        let status = 'IN_PROGRESS';
        let attempts = 0;
        const maxAttempts = 30; // 30 l·∫ßn * 2 gi√¢y = 1 ph√∫t

        while (status === 'IN_PROGRESS' && attempts < maxAttempts) {
            attempts++;
            console.log(`‚è≥ L·∫ßn th·ª≠ ${attempts}/${maxAttempts} - ƒêang ch·ªù job ho√†n th√†nh...`);
            
            await new Promise(resolve => setTimeout(resolve, 2000)); // Ch·ªù 2 gi√¢y
            
            try {
                const statusRes = await axios.post('http://localhost:8888/api/tts/status', {
                    request_id: requestId
                }, {
                    headers: { 'Content-Type': 'application/json' }
                });

                console.log('üìä Response t·ª´ /api/tts/status:');
                console.log(JSON.stringify(statusRes.data, null, 2));
                
                status = statusRes.data.status;
                console.log(`üìä Tr·∫°ng th√°i: ${status}`);
                
                if (status === 'COMPLETED') {
                    console.log('‚úÖ Job ho√†n th√†nh!');
                    
                    // 3. L·∫•y audio URL
                    console.log('\n3Ô∏è‚É£ L·∫•y audio URL...');
                    const audioUrl = statusRes.data.audioUrl;
                    console.log(`üîó Audio URL: ${audioUrl}`);
                    
                    // 4. T·∫£i file v·ªÅ m√°y ch·ªß
                    console.log('\n4Ô∏è‚É£ T·∫£i file MP3 v·ªÅ m√°y ch·ªß...');
                    const downloadRes = await axios.post('http://localhost:8888/api/tts/download', {
                        request_id: requestId
                    }, {
                        headers: { 'Content-Type': 'application/json' }
                    });
                    
                    console.log('‚úÖ T·∫£i file th√†nh c√¥ng:');
                    console.log(JSON.stringify(downloadRes.data, null, 2));
                    
                    // 5. Li·ªát k√™ c√°c file audio ƒë√£ l∆∞u
                    console.log('\n5Ô∏è‚É£ Li·ªát k√™ c√°c file audio ƒë√£ l∆∞u...');
                    const listRes = await axios.get('http://localhost:8888/api/tts/list-audio');
                    console.log('üìÅ Danh s√°ch file audio:');
                    console.log(JSON.stringify(listRes.data, null, 2));
                    
                    break;
                } else if (status === 'FAILED') {
                    console.log('‚ùå Job th·∫•t b·∫°i!');
                    console.log(JSON.stringify(statusRes.data, null, 2));
                    break;
                }
            } catch (error) {
                console.log(`‚ö†Ô∏è L·ªói ki·ªÉm tra tr·∫°ng th√°i: ${error.message}`);
            }
        }

        if (status === 'IN_PROGRESS' && attempts >= maxAttempts) {
            console.log('‚è∞ Timeout: Job ch∆∞a ho√†n th√†nh sau 1 ph√∫t');
        }

        // 6. Test endpoint th·ªëng nh·∫•t
        console.log('\n6Ô∏è‚É£ Test endpoint th·ªëng nh·∫•t /api/tts...');
        const unifiedRes = await axios.post('http://localhost:8888/api/tts', {
            input_text: 'Test endpoint th·ªëng nh·∫•t - t·∫°o, ch·ªù v√† t·∫£i t·ª± ƒë·ªông.',
            voice_code: 'hn_female_ngochuyen_full_48k-fhg'
        }, {
            headers: { 'Content-Type': 'application/json' }
        });
        
        console.log('‚úÖ Endpoint th·ªëng nh·∫•t ho·∫°t ƒë·ªông:');
        console.log(JSON.stringify(unifiedRes.data, null, 2));

    } catch (error) {
        console.error('‚ùå L·ªói trong qu√° tr√¨nh test:', error.message);
        if (error.response) {
            console.error('Response data:', JSON.stringify(error.response.data, null, 2));
        }
    }
}

testVbeeFull();
