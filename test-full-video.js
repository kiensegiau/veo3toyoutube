const fetch = require('node-fetch');

async function testFullVideo() {
    try {
        console.log('üé¨ [testFullVideo] Test t·∫°o ƒë·ªß c·∫£nh cho video 23 ph√∫t');
        
        const videoPath = './test.mp4';
        const serverUrl = 'http://localhost:8888';
        
        // Test v·ªõi 8 segments tr∆∞·ªõc ƒë·ªÉ xem workflow
        console.log('\nüé¨ [Test] T·∫°o 8 segments (64 gi√¢y) tr∆∞·ªõc...');
        const hybridResponse = await fetch(`${serverUrl}/api/veo3-hybrid-workflow`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                videoPath: videoPath,
                options: {
                    frameInterval: 8, // M·ªói 8 gi√¢y 1 frame
                    outputFilename: `veo3_full_test_${Date.now()}.mp4`
                }
            })
        });
        
        const hybridResult = await hybridResponse.json();
        console.log('üé¨ [Test] Hybrid workflow result:', hybridResult.success ? '‚úÖ Success' : '‚ùå Failed');
        
        if (hybridResult.success) {
            console.log('üé¨ [Test] Workflow completed successfully');
            console.log('üé¨ [Test] Next steps:', hybridResult.nextSteps);
            
            // Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt
            if (hybridResult.result) {
                const workflow = hybridResult.result;
                console.log('\nüìä [Details] Workflow details:');
                console.log(`üìä Video info: ${workflow.videoInfo.duration}s, ${workflow.videoInfo.width}x${workflow.videoInfo.height}`);
                console.log(`üìä Frames extracted: ${workflow.frames.length}`);
                console.log(`üìä Transcript length: ${workflow.transcript.length} characters`);
                console.log(`üìä Veo3 videos: ${workflow.veo3Videos.length}`);
                
                if (workflow.veo3Videos.length > 0) {
                    console.log('\nüé¨ [Veo3 Videos] Operation names:');
                    workflow.veo3Videos.forEach((video, index) => {
                        console.log(`üé¨ Video ${index + 1}: ${video.operationName} - "${video.description}"`);
                    });
                }
            }
        } else {
            console.log('‚ùå [Test] Error:', hybridResult.message);
        }
        
    } catch (error) {
        console.error('‚ùå [testFullVideo] L·ªói:', error);
    }
}

testFullVideo();
