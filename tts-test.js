const fetch = require('node-fetch');

const base = 'http://localhost:8888';

async function createVietnameseTTS(text, filename = null) {
    try {
        console.log('üéµ Creating Vietnamese TTS...');
        console.log('Text:', text.substring(0, 50) + (text.length > 50 ? '...' : ''));
        console.log('Length:', text.length, 'characters');
        
        const payload = {
            response_type: 'indirect',
            callback_url: 'https://example.com/callback',
            input_text: text,
            voice_code: 'hn_female_ngochuyen_full_48k-fhg',
            audio_type: 'mp3',
            bitrate: 128,
            speed_rate: '1.0'
        };

        // Create job
        const result = await fetch(`${base}/api/tts/create`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify(payload)
        });

        const data = await result.json();
        if (!data.success) {
            console.error('‚ùå Failed to create job:', data);
            return;
        }

        console.log('‚úÖ Job created:', data.requestId);
        
        // Wait and poll for completion
        let attempts = 0;
        const maxAttempts = 30;
        
        while (attempts < maxAttempts) {
            await new Promise(r => setTimeout(r, 10000));
            attempts++;
            
            console.log(`‚è≥ Checking status (${attempts}/${maxAttempts})...`);
            
            const statusResult = await fetch(`${base}/api/tts/status`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ jobId: data.requestId })
            });
            
            const statusData = await statusResult.json();
            
            if (statusData.audioUrl) {
                console.log('üéâ Audio ready! Downloading...');
                
                const downloadResult = await fetch(`${base}/api/tts/download`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        audioUrl: statusData.audioUrl,
                        filename: filename || `vietnamese_${Date.now()}.mp3`
                    })
                });
                
                const downloadData = await downloadResult.json();
                console.log('‚úÖ Download complete:', downloadData);
                return downloadData;
            }
            
            if (statusData.status === 'FAILED') {
                console.error('‚ùå Job failed');
                return;
            }
        }
        
        console.log('‚è∞ Timeout waiting for completion');
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    }
}

// Test with different Vietnamese texts
async function runTests() {
    console.log('üöÄ Starting Vietnamese TTS Tests\n');
    
    // Test 1: Short text
    console.log('üìù Test 1: Short Vietnamese text');
    await createVietnameseTTS(
        'Xin ch√†o, ƒë√¢y l√† test ti·∫øng Vi·ªát v·ªõi d·∫•u thanh ƒëi·ªáu.',
        'test_short.mp3'
    );
    
    console.log('\n' + '='.repeat(50) + '\n');
    
    // Test 2: Ken Ken Audio story
    console.log('üìù Test 2: Ken Ken Audio story');
    await createVietnameseTTS(
        'Xin c·∫£m ∆°n m·ªçi ng∆∞·ªùi ƒë√£ l·∫Øng nghe truy·ªán tr√™n Ken Ken Audio. Ch√∫c m·ªçi ng∆∞·ªùi c√≥ nh·ªØng gi√¢y ph√∫t th√∫ v·ªã khi nghe truy·ªán. Khi Ph√≥ T√¢y T·∫´n b·ªã m√π c·∫£ hai m·∫Øt, t√¥i ƒë√£ d·∫´n anh v·ªÅ nh√†. Anh th√≠ch ƒë√πa gi·ª°n, n√≥i r·∫±ng m√¨nh l√† ch√∫ c√∫n ngoan c·ªßa t√¥i v√† th√≠ch kh√°m ph√° c∆° th·ªÉ t√¥i trong b√≥ng t·ªëi ƒë·ªÉ ghi nh·ªõ h√¨nh d√°ng c·ªßa t√¥i.',
        'kenken_story_final.mp3'
    );
    
    console.log('\nüéµ All tests completed!');
    
    // List all audio files
    try {
        const listResult = await fetch(`${base}/api/tts/list-audio`);
        const listData = await listResult.json();
        console.log('\nüìÅ All audio files:');
        console.log(JSON.stringify(listData, null, 2));
    } catch (e) {
        console.error('Error listing files:', e);
    }
}

// Run if called directly
if (require.main === module) {
    runTests();
}

module.exports = { createVietnameseTTS };
